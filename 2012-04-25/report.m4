include(`../lib.m4')dnl
define(`run210',`dnl
syscmd(`echo "> $1"')dnl
syscmd(`echo "$1" | ./210 | sed "s/^/< /"')dnl
')dnl
header(`2', `210', `文字、文字列、標準入出力')dnl

今回の課題では練習問題210を選択した。以下にソースコードを示す。

source(`210.c')dnl

このプログラムの実装は、再帰下降パーサを素直に実装したものである。ただし、|, <,
> を prefix としてコマンドやファイル名を読むために、ungetc を用いて入力ストリー
ムの先頭に | を追加した。

本来であればエラーメッセージは標準エラー出力に出力するのが好ましいが、レポート作
成の半自動化に GNU M4 を使用している都合で標準出力に出力している。

以下に、いくつかの入出力例を示す。"> "で始まる行は入力を示し、"< "で始まる行は出
力を示す。

run210(`a | b |c d | e| f g')dnl

run210(`a | b c| d < input> output')dnl

run210(`a | b c> output |d < input')dnl

run210(`a < input1| b c |d < input2> output')dnl

3番目の実行例より、課題で求められている1つ目の要件「異なるリダイレクション記号の
出現順序が変わっても対応できるように」を満たしていることが分かる。

4番目の実行例より、課題で求められている2つ目の要件「同じリダイレクション記号が複
数出てきたらエラーメッセージが出力されるように」を満たしていることが分かる。

1番目から3番目までの実行例より、課題で求められている3つ目の要件「スペースがコマ
ンド，リダイレクション記号，ファイル名の周りに入っていなくても，または複数個入っ
ていても，同じように処理できるように」を満たしていることが分かる。

footer()dnl
